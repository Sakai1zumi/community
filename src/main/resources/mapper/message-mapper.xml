<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.th1024.community.dao.MessageMapper">

    <sql id="selectFields">
        `id`
        , `from_id`, `to_id`, `conversation_id`, `content`, `status`, `create_time`
    </sql>

    <sql id="insertFields">
        `from_id`, `to_id`, `conversation_id`, `content`, `status`, `create_time`
    </sql>

    <select id="selectConversations" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where `id` in (
            /*子查询查询每个会话的最大的id*/
            select max(`id`) /*最新的一条数据，一般是id最大，或者生成时间最后*/
            from message
            where `status` != 2
            and `from_id` != 1 /*from_id为1表示系统用户，发送的消息为通知，不是私信*/
            and (`from_id` = #{userId} or `to_id` = #{userId})
            group by `conversation_id`
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
            select max(`id`) as maxid /*起别名方便引用*/
            from message
            where `status` != 2
            and `from_id` != 1
            and (`from_id` = #{userId} or `to_id` = #{userId})
        group by `conversation_id`
            ) as m
    </select>

    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where `status` != 2
        and `from_id` != 1
        and `conversation_id` = #{conversationId}
        order by `id` desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where `status` != 2
        and `from_id` != 1
        and `conversation_id` = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where `status` = 0
        and `from_id` != 1
        and `to_id` = #{userId}
        <if test="conversationId!=null">
            and `conversation_id` = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id"> /*bug：漏写了keyProperty*/
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message set `status` = #{status}
        where `id` in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where `id` in
        (
            select max(`id`)
            from message
            where `from_id` = 1
            and `to_id` = #{userId}
            and `conversation_id` = #{topic}
            and `status` != 2
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(`id`)
        from message
        where `from_id` = 1
          and `to_id` = #{userId}
          and `conversation_id` = #{topic}
          and `status` != 2
    </select>

    <select id="selectNoticeUnreadCount" resultType="int" >
        select count(`id`)
        from message
        where `status` = 0
        and `from_id` = 1
        and `to_id` = #{userId}
        <if test="topic!=null">
            and `conversation_id` = #{topic}
        </if>
    </select>

    <select id="selectNotices" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where `from_id` = 1
        and `to_id` = #{userId}
        and `conversation_id` = #{topic}
        and `status` != 2
        order by `create_time` desc
        limit #{offset}, #{limit}
    </select>

</mapper>